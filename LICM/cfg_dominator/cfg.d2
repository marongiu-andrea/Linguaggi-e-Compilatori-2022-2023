foo: {
  preheader: |llvm
    PREHEADER:
      br label %3
  |

  header: |llvm
    HEADER:
      3:                                                ; preds = %15, %2
        %.05 = phi i32 [ 0, %2 ], [ %19, %15 ]
        %.04 = phi i32 [ 0, %2 ], [ %17, %15 ]
        %.03 = phi i32 [ 0, %2 ], [ %16, %15 ]
        %.01 = phi i32 [ 9, %2 ], [ %.1, %15 ]
        %.0 = phi i32 [ %1, %2 ], [ %4, %15 ]
        %4 = add nsw i32 %.0, 1
        %5 = add nsw i32 %0, 3
        %6 = add nsw i32 %0, 7
        %7 = icmp slt i32 %4, 5
        br i1 %7, label %8, label %11
  |

  bb1: |llvm
    BB1:
      8:                                                ; preds = %3
        %9 = add nsw i32 %.01, 2
        %10 = add nsw i32 %0, 3
        br label %15
  |

  bb2: |llvm
    BB2:
      11:                                               ; preds = %3
        %12 = sub nsw i32 %.01, 1
        %13 = add nsw i32 %0, 4
        %14 = icmp sge i32 %4, 10
        br i1 %14, label %20, label %15
  |

  bb3: |llvm
    BB3:
      15:                                               ; preds = %11, %8
        %.02 = phi i32 [ %10, %8 ], [ %13, %11 ]
        %.1 = phi i32 [ %9, %8 ], [ %12, %11 ]
        %16 = add nsw i32 %5, 7
        %17 = add nsw i32 %.02, 2
        %18 = add nsw i32 %0, 7
        %19 = add nsw i32 %6, 5
        br label %3
  |

  exit: |llvm
    OUTSIDE LOOP:
      20:                                               ; preds = %11
        %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 %12, i32 %13, i32 %.03, i32 %.04, i32 %6, i32 %.05, i32 %5, i32 %4)
        ret void
  |

  preheader -> header
  header -> bb1: true
  header -> bb2: false
  bb1 -> bb3
  bb2 -> exit: true
  bb2 -> bb3: false
  bb3 -> header
}